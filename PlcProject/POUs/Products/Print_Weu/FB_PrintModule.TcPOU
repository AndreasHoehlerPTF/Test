<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_PrintModule" Id="{cb9319db-6969-4a30-812e-4f2d714eb08a}" SpecialFunc="None">
    <Declaration><![CDATA[(*
  A DVT PrintModule (DEU, DSU, WEU).
  
*)
FUNCTION_BLOCK FB_PrintModule EXTENDS T_NamedBase IMPLEMENTS I_PrintSubsystem
VAR_INPUT
  // encoder input --> directly mapped into FB_PrintPosition 
  // machine state by pointer in init()
  // external start pos interface by pointer in init()
  bEnableWorker  : ARRAY[1..GVL_WEU.nC_WorkerPrintPerPm] OF BOOL;    // external configurative enable PG
  fPrintOffsetX  : ARRAY[1..GVL_WEU.nC_WorkerPrintPerPm] OF LREAL;   // external configurative offsets to PM (PU / PM /PG) 
  fPrintOffsetY  : ARRAY[1..GVL_WEU.nC_WorkerPrintPerPm] OF LREAL;   // external configurative offsets to PM (PU / PM / PG / Machine) 
END_VAR

VAR
  //config
  _bMasterModule          : BOOL;         // this is the master module (position and CT creation)
  _nIdx                   : UDINT;        // for visu selection only (remove later)
  _pAdsPm                 : POINTER TO ST_ADS_PM; //ads config/status interface
  _pAdsSa                 : POINTER TO ST_ADS_DVTSHEETALIGNMENT; // sheet alignemnt ads
  
  _fResolutionPrint       : LREAL;
  _fResolutionSubPx       : LREAL;
  _fDistToMasterPm        : LREAL;        // distance to master reference module (mech.), does not include DetectToPu
  _nYShift_PcRamCenter    : UDINT;        // y-shift for centered image in CB RAM [px]
  // - references
  _pModuleMachineState    : POINTER TO ST_ModuleMachineInterface;   // reference to machine states
  _pCTManager             : POINTER TO FB_CTManagerDefGrid;
  
  // status
  bInit                   : BOOL;   // initialized
  bJobActive              : BOOL;   // a job is started
  bReadyForPrinting       : BOOL;   // Module ready for printing
  bHardwareHold           : BOOL;   // hw hold
  
  // instances
  fbPrintPosition         : FB_PrintPositionDmax;
  //fbDropSpeedComp         : FB_DropSpeedComp;           // compensation drop ToF in X direction
  fbStartPosDetect        : FB_StartPositionWeu;
  fbWorkerPrint           : ARRAY[1..GVL_WEU.nC_WorkerPrintPerPm] OF FB_WorkerDefGrid_Print;
  
  // helper
  nCtr : UDINT;
  fMasterSpeed, fSpeedMpMin : LREAL;
  fPuElevation            : LREAL;
  nPos_SubPx, nPos_Px     : DINT;
  fPos_um                 : LREAL;
  rT_ReadForPrinting      : R_TRIG;
  rT_JobActive            : R_TRIG;
  tSyncDelay              : TON;
  bHwSyncCmd              : BOOL;
  
  sMarkDefinition         : ST_MarkDefinition_Triangle;
 
  // messaging
  fb_MsgQueue             : FB_MSG_QUEUE;                 (*Message queue*)
  fb_MsgHandler           : FB_MSG_HANDLER;               (*Message handler*)
  sL_MsgConfig            : ST_MSG_CONFIG;                (*Message config*)
  fb_Msg                  : ARRAY [1..nC_NumMsg] OF FB_MESSAGE;  (*Messages*)
  
  // view
  
  // testing
  _bSim : BOOL;
END_VAR
VAR PERSISTENT
  _fEncoderCylinderDiameter : LREAL := 100.0;      // Encoder cylinder diameter [mm]
  _fPrintModuleAdjustY      : LREAL; // Module adjust Y [µm]*)
END_VAR
VAR CONSTANT
  fC_EncoderImpU          : LREAL := 10_000 * 4;   // Impulses * 4 times sampling [Imp/U]
  fC_HeadOffsetPlate      : LREAL := 0.000_2;      // Head offset to base plate [m]
  nC_NumMsg               : INT := 8;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bInit THEN RETURN; END_IF

bReadyForPrinting := _pModuleMachineState^.bEngaged AND _pModuleMachineState^.bPrintEnabled AND _pModuleMachineState^.bUnitInPrintPosition;
rT_ReadForPrinting(CLK:=bReadyForPrinting);
rT_JobActive(CLK:=bJobActive);

// sync trigger generation
IF rT_ReadForPrinting.Q OR rT_JobActive.Q  THEN
  fbPrintPosition.reset();    // reset internals on sync request
  fbStartPosDetect.Reset();
  tSyncDelay(IN:=TRUE, PT:=T#2MS);   // a Sync delay to workaround a sync sent to CB while a Start or Prepare Command
END_IF
tSyncDelay(Q=>bHwSyncCmd); 
IF tSyncDelay.Q THEN
  tSyncDelay(IN:=FALSE);
END_IF

// positioning 
// - calculate encoder resolution (fL_SubstrateThickness with factor is added to the raduis because of the neutral fiber of the substrate)
//   update encoder position based on machine parameter
fbPrintPosition.fEnoderResolution := ((_fEncoderCylinderDiameter / 1000 / 2) + (_pModuleMachineState^.fSubstrateThickness * DINT_TO_REAL(_pModuleMachineState^.nNeutralFibreFactor) / 100)) * 2 * PI * 1_000_000 / fC_EncoderImpU;
{warning 'TODO: hide encoder signals while : NOT bReadForPrinting'} 
fbPrintPosition();
fMasterSpeed := fbPrintPosition.getSpeed(fSpeedMpMin=>fSpeedMpMin);
nPos_SubPx := fbPrintPosition.getPosition(nPosition_px=>nPos_Px, fPosition_um=>fPos_um);

// Drop speed compensation
fPuElevation := (_pAdsSa^.sI_HeadGap.fI_Val / 1000) + fC_HeadOffsetPlate - _pModuleMachineState^.fSubstrateThickness;
//now in Worker, maybe move here: fbDropSpeedComp(fMasterSpeed:=fMasterSpeed, fDropTravelDistance:=fPuElevation);
//fbDropSpeedComp.fDropPlacementError


// StartPosition detection
updateMarkDefinition();
// --> Lateral (y) Offset
{warning 'TODO: SubstrateLength from Job or Machine? Check somewhere'} 
fbStartPosDetect(
  bEnable:=_pModuleMachineState^.bTargetSpeedReached AND bProductionSpeedReached,
  nCurrentPos:=nPos_SubPx,
  fCurrentSpeed:=fMasterSpeed,
  fSubstrateLength:=_pModuleMachineState^.fSubstrateLen,
  bUseExternalStartPos:=(NOT _pModuleMachineState^.bMarksExist AND _nIdx > 1)   // first module is master
);

{warning 'TODO: set HardwareHold'}
bHardwareHold := NOT fbPrintPosition.bSpeedProduction OR NOT _pModuleMachineState^.bPrintEnabled;    //before: machine stopped/NOT upper5MpMin, module enabled, driftControl OK


// Worker
// - fill I_SubSystem correctly from all workers
FOR nCtr := 1 TO GVL_WEU.nC_WorkerPrintPerPm DO
  fbWorkerPrint[nCtr].fPosition :=  fPrintOffsetX[nCtr]
                                  + (fbWorkerPrint[nCtr].fStartShiftOffset + fbWorkerPrint[nCtr].fStartShiftFactor * fMasterSpeed)   // pre-start (attach position)
                                  + _fDistToMasterPm
                                  + master detect offset,
  fbWorkerPrint[nCtr].bEnable := bEnableWorker[nCtr];     // AND _pModuleMachineState^.bEngaged;
  fbWorkerPrint[nCtr](
    nEncoderPos           := nPos_SubPx,
    bHardwareSync         := bHwSyncCmd,
    bHardwareHold         := bHardwareHold,
    fPrintStartOffset     :=  fPrintOffsetX[nCtr]     // NOTE: dynamic corrections done in Worker (dropSpeedComp / global grid dx))
                            + module detect offset,   // modules detect distance or the Master if in simulation mode
                            {warning 'TODO: Vorzeichen von lateral offset & LateralOffser +/-?: Vorher war -'}
                            {warning 'TODO: why not using PM Y-Shift for Manual PM offset? and why will we need an offset in um in PLC?'}
    fPrintYOffset         := LIMIT(
                            0,
                              _nYShift_PcRamCenter
                              + fPrintOffsetY[nCtr]      // calc with CB Shift, PU y-Shift, PG y-shift
                              + F_MeterToSubPixel(fbStartPosDetect.fLateralOffset, nC_PrintResolution)    // Y from mark detection
                              + _pModuleMachineState^.nLateralRegister,    // lateral register from machine
                              //+ Manual PM Offset (manaul lateral offset per pm (VISU) 
                            2*_nYShift_PcRamCenter),
    fMasterSpeed          := fMasterSpeed,
    fPUElevation          := fPuElevation,  // for internal dropSpeedCorrection
    fPUPlate1_Temperature := 0, // for banana correction
    fPUPlate2_Temperature := 0, // for banana correction
//    bError                => ,
//    nError                => ,
  );
END_FOR


// messaging
Messaging();
]]></ST>
    </Implementation>
    <Folder Name="I_PrintSubsystem" Id="{b9baebe0-50ad-459a-b691-c90f1f0a0353}">
      <Folder Name="I_PrintStatusClient" Id="{69116f41-841a-4b41-b4b9-7c93f5f8b542}" />
    </Folder>
    <Folder Name="Position" Id="{12a320fc-93c2-445f-a96d-a4cd86407a32}" />
    <Folder Name="Sim" Id="{6de8d664-1ecd-4e7c-9e04-bad56ccd972b}" />
    <Folder Name="Status" Id="{0e451606-8ae6-4dab-a358-fd42b219dee8}" />
    <Property Name="bEnabled" Id="{dd69c9d0-97e4-4804-a2b8-0a4f121996a6}" FolderPath="I_PrintSubsystem\">
      <Declaration><![CDATA[PROPERTY bEnabled : BOOL
]]></Declaration>
      <Get Name="Get" Id="{9df46838-8058-4926-a0a9-f40c29312791}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bEnabled := _bConnected AND fBProcessUnitPrint.bEnabled;

// all lines or one line active, printEnable, Engaged?]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bEngaged" Id="{a171e1bc-3b76-4b6d-9e1d-d5d08b596c61}" FolderPath="Status\">
      <Declaration><![CDATA[PROPERTY bEngaged : BOOL]]></Declaration>
      <Get Name="Get" Id="{96eabca3-d7cb-45a6-a85f-fa83e749869b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bEngaged := _pModuleMachineState^.bEngaged;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bError" Id="{aa8ead8c-c8ea-4424-b28e-c9c90288ae50}" FolderPath="I_PrintSubsystem\">
      <Declaration><![CDATA[PROPERTY bError : BOOL
]]></Declaration>
      <Get Name="Get" Id="{1d85b498-9e47-4331-80bd-154a01353d1d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bError := _bError AND fBProcessUnitPrint.bError;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bMoving" Id="{eda3f871-87e3-46aa-b28f-2fbe8d09d6f1}" FolderPath="Position\">
      <Declaration><![CDATA[PROPERTY bMoving : BOOL]]></Declaration>
      <Get Name="Get" Id="{76f0abe9-c1ec-4dc9-918f-26ce0a4812d5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bMoving := fbPrintPosition.bMoving;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bPausePrintCanEx" Id="{a476de0b-ce3a-444f-8c6a-909663aa9e0a}" FolderPath="I_PrintSubsystem\">
      <Declaration><![CDATA[PROPERTY bPausePrintCanEx : BOOL
]]></Declaration>
      <Get Name="Get" Id="{3831860d-bca0-4575-a1fa-b2dad5acba06}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bPausePrintCanEx := fBProcessUnitPrint.bPausePrintCanEx;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bPcEnabled" Id="{fcc9388a-50a8-47f2-ac1e-f6017deffdbd}" FolderPath="I_PrintSubsystem\">
      <Declaration><![CDATA[PROPERTY bPcEnabled : BOOL
]]></Declaration>
      <Get Name="Get" Id="{bf03388c-6851-43f5-9888-6f7ed2127fff}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bPcEnabled := fBProcessUnitPrint.bPcEnabled;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bPrinting" Id="{b0858cdd-fa1a-4645-b26d-55418fd7ee65}" FolderPath="I_PrintSubsystem\">
      <Declaration><![CDATA[PROPERTY bPrinting : BOOL
]]></Declaration>
      <Get Name="Get" Id="{f6225527-9cc1-41c0-b905-6a4985b2e712}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bPrinting := fBProcessUnitPrint.bPrinting;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bProductionSpeedReached" Id="{9ff20b5c-5f63-447e-9c18-e9105a23b352}" FolderPath="Position\">
      <Declaration><![CDATA[PROPERTY bProductionSpeedReached : BOOL]]></Declaration>
      <Get Name="Get" Id="{6c9aeca4-3cc5-4809-a817-3f50d14b5f9d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bProductionSpeedReached := fbPrintPosition.bSpeedProduction;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bReady" Id="{74926271-aad5-4394-afe7-6d8e1935336e}" FolderPath="I_PrintSubsystem\">
      <Declaration><![CDATA[PROPERTY bReady : BOOL
]]></Declaration>
      <Get Name="Get" Id="{7f4a77e6-9bcd-49d5-a0d2-107097fe7d5d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bReady := fBProcessUnitPrint.bReady AND fBProcessUnitMaster.bActivationComplete;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bSim" Id="{0f604c0e-9e5d-44dd-b620-672fedba6798}" FolderPath="Sim\">
      <Declaration><![CDATA[PROPERTY bSim : BOOL]]></Declaration>
      <Get Name="Get" Id="{eed6e031-ccb0-4834-afd4-be86a2055e6a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bSim := _bSim;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{0514b0f1-83fc-4960-94d7-be479b9c0ddd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_bSim := bSim;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="bStartPrintCanEx" Id="{9f802a56-908d-4f5b-9e35-622b41b86581}" FolderPath="I_PrintSubsystem\">
      <Declaration><![CDATA[PROPERTY bStartPrintCanEx : BOOL
]]></Declaration>
      <Get Name="Get" Id="{f5efc731-6b4f-4136-8393-6c8a6fcba5ed}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bStartPrintCanEx := fBProcessUnitPrint.bStartPrintCanEx;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bStopPrintCanEx" Id="{3f0f6920-f9be-42af-a5ef-4fea8338cad9}" FolderPath="I_PrintSubsystem\">
      <Declaration><![CDATA[PROPERTY bStopPrintCanEx : BOOL
]]></Declaration>
      <Get Name="Get" Id="{4a7c173f-2a72-4904-b485-d64f5dab3c8b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bStopPrintCanEx := fBProcessUnitPrint.bStopPrintCanEx;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="bSyncCmd" Id="{8c9b7208-05bb-4de2-9fc3-012291795493}" FolderPath="Position\">
      <Declaration><![CDATA[(* 
  Hardware sync request.
*)
PROPERTY bSyncCmd : BOOL]]></Declaration>
      <Get Name="Get" Id="{1d5bc1c8-adae-45fe-ab06-7bb1731fc239}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bSyncCmd := bHwSyncCmd;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="fDistToMasterPm" Id="{455cd95b-6303-4ebf-9e88-dadf5560910b}" FolderPath="Position\">
      <Declaration><![CDATA[PROPERTY fDistToMasterPm : LREAL]]></Declaration>
      <Get Name="Get" Id="{46f7fea5-d578-4bd4-83a8-86c060ec2c6c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[fDistToMasterPm := _fDistToMasterPm;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{f074952a-7751-4515-a0a8-a9ec10297272}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_fDistToMasterPm := fDistToMasterPm;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Init" Id="{4338a7a6-6293-49ad-a96d-3660b8a91900}">
      <Declaration><![CDATA[METHOD Init : BOOL
VAR_INPUT
  nIdx                  : UDINT;                                // Module id
  pAdsPm                : POINTER TO ST_ADS_PM;                 // ADS module
  pAdsSa                : POINTER TO ST_ADS_DVTSHEETALIGNMENT;  // ADS sheet alignement
  pAdsCam               : POINTER TO ST_ADS_CAMERA;             // ADS camera
  
  // config print
  fPrintResolution      : LREAL := 600;         // print(head) resolution in [dpi]
  fSubPxResolution      : LREAL := 32;          // SubPixel resolution [SubPx], resolution factor (fI_PrintResolution*fI_SubPxResolution=>Output resolution)
  fPrintUnitWidth       : LREAL;                // PrintUnit width mechanical [m]
  nYShift_PcRamCenter   : UDINT;                // Y shift for centered image data in RAM [px]
  fTaskCycleTime        : LREAL;                // Task cycle time in [s]
  // references
  pModuleMachineInterface : POINTER TO ST_ModuleMachineInterface;
  pCTManager            : POINTER TO FB_CTManagerDefGrid;       // used for internal worker (registerPosition, get
  iProdManager          : I_ProdManager;
END_VAR
VAR
  nCtr : UDINT;
END_VAR
VAR CONSTANT
  fC_PROD_MASTER_SPEED  : LREAL := 5.0;    (*[m/min]*)
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF pAdsPm = 0 OR pAdsSa = 0 OR pModuleMachineInterface = 0 OR pCTManager = 0 THEN
  LogError('Invalid parameter');
  RETURN;
END_IF

// save config
_nIdx := nIdx;
_pAdsPm := pAdsPm;
_pAdsSa := pAdsSa;
_fResolutionPrint := fPrintResolution;
_fResolutionSubPx := fSubPxResolution;
_nYShift_PcRamCenter := nYShift_PcRamCenter;
_pModuleMachineState := pModuleMachineInterface;
_pCTManager := pCTManager;

// positioning
fbPrintPosition.Init(
  fPrintResolution:=fPrintResolution,
  fSubPxResolution:=fSubPxResolution,
  fTaskCycleTime:=fTaskCycleTime,
  fProdSpeedMpMin:=fC_PROD_MASTER_SPEED
);

// start position
fbStartPosDetect.Init( fPrintResolution:=nC_PrintResolution,
                       fSubPxResolution:=nC_SubPixelResolution,
                       pMarkDefinition:=ADR(sMarkDefinition),
                       iStartPosDetectExt:=iStartPosDetectExt
);


// Worker
FOR nCtr := 1 TO GVL_WEU.nC_WorkerPrintPerPm DO
  fbWorkerPrint[nCtr].Init(
    fPrintResolution:=fPrintResolution,
    fSubPxResolution:=fSubPxResolution,
    pCtManager:=pCTManager,
    pParamMediator:=,
    pMsgConfig:=ADR(sL_MsgConfig)
  );
  fbWorkerPrint[nCtr].InitMsg(pMsgInterface:=);
  fbWorkerPrint[nCtr].InitWorkerPrint(
    pAdsIfCam:=pAdsCam,
    fPrintUnitWidth:=fPrintUnitWidth,
    fLimitCorrectionX:=1000,
    fLimitCorrectionY:=nYShift_PcRamCenter-1
  );
  fbWorkerPrint[nCtr].reg();
END_FOR 

// register PCs 
FOR lCtr := 1 TO iCPr_NB_PC DO
  fbWorkerWeu[iCPr_MAP_PC_PG[lCtr]].registerPc(iNewPC := FB_PC[lCtr]);
END_FOR;
// register PHs
FOR lCtr := 1 TO iCPr_NB_PH DO
  fbWorkerWeu[iCPr_MAP_PC_PG[iCPr_MAP_PH_PC[lCtr]]].registerPh(iPH := FB_PH[lCtr]);
END_FOR




(*Messaging*)
sL_MsgConfig.bI_Enable       := TRUE;
sL_MsgConfig.pI_FbMsgHandler := ADR(fb_MsgHandler);
fb_MsgHandler.pI_MsgQueue    := ADR(fb_MsgQueue);
fb_MsgQueue.pI_MsgInterface  := ADR(_pAdsPm^.sO_Message);
fb_MsgQueue.cI_MaxElement    := 6;

(*Messages*)
fb_Msg[1].pI_MsgConfig       := ADR(sL_MsgConfig);
fb_Msg[1].iI_MsgLocation     := ePr_BLK_PM;
fb_Msg[1].iI_MsgNumber       := eCMa_COVER_INLET;

fb_Msg[2].pI_MsgConfig       := ADR(sL_MsgConfig);
fb_Msg[2].iI_MsgLocation     := ePr_BLK_PM;
fb_Msg[2].iI_MsgNumber       := eCMa_SECURITY_DOOR_MONITORING;

fb_Msg[3].pI_MsgConfig       := ADR(sL_MsgConfig);
fb_Msg[3].iI_MsgLocation     := ePr_BLK_PM;
fb_Msg[3].iI_MsgNumber       := eCMa_EXHAUST_SYSTEM_WARNING;

fb_Msg[4].pI_MsgConfig       := ADR(sL_MsgConfig);
fb_Msg[4].iI_MsgLocation     := ePr_BLK_PM;
fb_Msg[4].iI_MsgNumber       := eCMa_EXHAUST_SYSTEM_ERROR;

fb_Msg[5].pI_MsgConfig       := ADR(sL_MsgConfig);
fb_Msg[5].iI_MsgLocation     := ePr_BLK_PM;
fb_Msg[5].iI_MsgNumber       := eCMa_EXHAUST_SYSTEM_MALFUNCTION;

fb_Msg[6].pI_MsgConfig       := ADR(sL_MsgConfig);
fb_Msg[6].iI_MsgLocation     := ePr_BLK_PM;
fb_Msg[6].iI_MsgNumber       := eCMa_DRIFT_CONTR_ERROR;

fb_Msg[7].pI_MsgConfig       := ADR(sL_MsgConfig);
fb_Msg[7].iI_MsgLocation     := ePr_BLK_PM;
fb_Msg[7].iI_MsgNumber       := eCMa_AXIS_SAFETY_ACCEPTANCE;

fb_Msg[8].pI_MsgConfig       := ADR(sL_MsgConfig);
fb_Msg[8].iI_MsgLocation     := ePr_BLK_PM;
fb_Msg[8].iI_MsgNumber       := eCPr_SHEET_MARK_DETECTION;

bInit := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="Master" Id="{bd73207e-06a1-49a5-a720-7c437fc7b5de}">
      <Declaration><![CDATA[METHOD PRIVATE Master
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Code only run on MASTER Module

// update master CT Manager position
_pCTManager^.nPositions[E_PosDomain.master_pos] := nPos_SubPx;
_pCTManager^.nPositions[E_PosDomain.pos_px]     := nPos_Px;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Messaging" Id="{643d2082-2a1e-46ab-80d2-9108069a18fe}">
      <Declaration><![CDATA[METHOD PRIVATE Messaging
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*Messaging*)
fb_MsgHandler();

fB_Msg[1](bI_Status := _pModuleMachineState^.bPrinterHood);
fB_Msg[2](bI_Status := _pModuleMachineState^.bServiceDoors);
fB_Msg[3](bI_Status := _pModuleMachineState^.bExhaustVacuumWarning);
fB_Msg[4](bI_Status := _pModuleMachineState^.bExhaustVacuumError);
fB_Msg[5](bI_Status := _pModuleMachineState^.bExhaustFUError);
fB_Msg[6](bI_Status := _pModuleMachineState^.bDriftControlError);
fB_Msg[7](bI_Status := _pModuleMachineState^.bSafetyNOk);
fB_Msg[8](bI_Status := _pModuleMachineState^.bDriftControlMissMarks);

fb_MsgQueue();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="mJobPause" Id="{887afe17-63bc-4ae9-bb47-91b262d82129}" FolderPath="I_PrintSubsystem\I_PrintStatusClient\">
      <Declaration><![CDATA[METHOD mJobPause
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="mJobStart" Id="{113944aa-4f4e-400e-92a4-4d59053804f5}" FolderPath="I_PrintSubsystem\I_PrintStatusClient\">
      <Declaration><![CDATA[METHOD mJobStart
VAR_INPUT
	sJobDef	: CalmarCompPrint.I_JobDefinition;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[bJobActive := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="mJobStop" Id="{25cf927b-a2bf-4366-ac82-13a7b4acfdb6}" FolderPath="I_PrintSubsystem\I_PrintStatusClient\">
      <Declaration><![CDATA[METHOD mJobStop
VAR_INPUT
	sStatus	: CalmarCompPrint.I_JobStatus;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[bJobActive := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="mProduced" Id="{430beb9d-42f5-4cab-972b-9b0f17e309c5}" FolderPath="I_PrintSubsystem\I_PrintStatusClient\">
      <Declaration><![CDATA[METHOD mProduced
VAR_INPUT
	(* current progress*)
	sProgress	: CalmarCompPrint.I_JobProgress;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="updateMarkDefinition" Id="{25e8112b-212f-4a0f-a97d-36d6a347daeb}">
      <Declaration><![CDATA[METHOD PRIVATE updateMarkDefinition]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _pAdsSa = 0 OR _pModuleMachineState = 0 THEN RETURN; END_IF

sMarkDefinition.bEnabled := _pModuleMachineState^.bMarksExist; // _pAdsSa^.bI_UsePrintMark;
sMarkDefinition.fHeight := _pAdsSa^.sI_PrintMarkSizeY.fI_Val / 1_000;
sMarkDefinition.fLength := _pAdsSa^.sI_PrintMarkSizeX.fI_Val / 1_000;
sMarkDefinition.bInvertedX := _pModuleMachineState^.bMarksInverted;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_PrintModule">
      <LineId Id="1362" Count="42" />
      <LineId Id="1538" Count="0" />
      <LineId Id="1405" Count="0" />
      <LineId Id="1536" Count="1" />
      <LineId Id="1406" Count="3" />
      <LineId Id="1532" Count="2" />
      <LineId Id="1531" Count="0" />
      <LineId Id="1539" Count="0" />
      <LineId Id="1411" Count="3" />
      <LineId Id="1419" Count="1" />
      <LineId Id="1439" Count="0" />
      <LineId Id="1452" Count="0" />
      <LineId Id="1421" Count="0" />
      <LineId Id="1455" Count="0" />
      <LineId Id="1454" Count="0" />
      <LineId Id="1451" Count="0" />
      <LineId Id="1436" Count="1" />
      <LineId Id="1440" Count="0" />
      <LineId Id="1456" Count="0" />
      <LineId Id="1422" Count="11" />
      <LineId Id="770" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bEnabled.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bEngaged.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bError.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bMoving.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bPausePrintCanEx.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bPcEnabled.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bPrinting.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bProductionSpeedReached.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bReady.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bSim.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bSim.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bStartPrintCanEx.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bStopPrintCanEx.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.bSyncCmd.Get">
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.fDistToMasterPm.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.fDistToMasterPm.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.Init">
      <LineId Id="372" Count="10" />
      <LineId Id="478" Count="0" />
      <LineId Id="383" Count="27" />
      <LineId Id="501" Count="5" />
      <LineId Id="516" Count="0" />
      <LineId Id="500" Count="0" />
      <LineId Id="411" Count="0" />
      <LineId Id="508" Count="7" />
      <LineId Id="507" Count="0" />
      <LineId Id="412" Count="44" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.Master">
      <LineId Id="5" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.Messaging">
      <LineId Id="6" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.mJobPause">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.mJobStart">
      <LineId Id="7" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.mJobStop">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.mProduced">
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="FB_PrintModule.updateMarkDefinition">
      <LineId Id="9" Count="1" />
      <LineId Id="5" Count="3" />
    </LineIds>
  </POU>
</TcPlcObject>