<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_NeutralFibreDetermine" Id="{09e5318c-d36f-4976-9501-8d59b352594a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_NeutralFibreDetermine EXTENDS FB_Commons
{library public}
VAR_INPUT
  (*EL1252*)
  bIKp_MarkTrigger01        AT%I* : BOOL;        (*Mark sensor 01*)
  tIKp_TimeStampPos01       AT%I* : T_DCTIME64;  (*TimeStamp Pos_Edge @EL1252*)
  tIKn_TimeStampNeg01       AT%I* : T_DCTIME64;  (*TimeStamp Neg_Edge @EL1252*)
  bIKp_MarkTrigger02        AT%I* : BOOL;        (*Mark sensor 02*)
  tIKp_TimeStampPos02       AT%I* : T_DCTIME64;  (*TimeStamp Pos_Edge @EL1252*)
  tIKn_TimeStampNeg02       AT%I* : T_DCTIME64;  (*TimeStamp Neg_Edge @EL1252*)

  fSpeed                          : LREAL;       (*Current speed of substrate in [m/s]*)
END_VAR

VAR_OUTPUT
END_VAR

(*{library private}*)
VAR
  bInitOk                         : BOOL;           // initialized
  bSpeedValid                     : BOOL;           // speed is valid
  
  (*configuration*)
  _nResolution                    : LREAL := 1;     // Printhead Resolution [e.g. 600] x Subpixel Resolution [e.g. 32]*)

  fbRTrigMark01                   : R_TRIG;
  fbRTrigMark02                   : R_TRIG;
  
  fL_DurationMark01to02           : LREAL;      (*Mark 1 to 2 [ms]*)
  fL_LengthMark01to02             : LREAL;      (*Mark 1 to 2 [mm]*)
  nL_DeltaMark01to02              : DINT;       (*Mark 1 to 2 [SubPx]*)
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bInitOk THEN RETURN; END_IF;

fbRTrigMark01(CLK := bIKp_MarkTrigger01);
fbRTrigMark02(CLK := bIKp_MarkTrigger02);

IF fbRTrigMark01.Q THEN
	;
END_IF

IF fbRTrigMark02.Q THEN
	fL_DurationMark01to02 := (ULINT_TO_LREAL(tIKp_TimeStampPos02) - ULINT_TO_LREAL(tIKp_TimeStampPos01)) / 1_000_000.0; (*[ms]*)
	fL_LengthMark01to02   := ((fL_DurationMark01to02 / 1000) * fSpeed) * 1000;    (*[mm]*)
	nL_DeltaMark01to02    := LREAL_TO_DINT((fL_LengthMark01to02 * _nResolution) / 25.4);    (*[SubPx]*)
END_IF

(********************************* END OF FB *****************************************************)]]></ST>
    </Implementation>
    <Method Name="Init" Id="{0e5d9d38-5568-4252-a7a4-4a674ac176b4}">
      <Declaration><![CDATA[METHOD Init
VAR_INPUT
  nResolution                   : LREAL := 1;        (*Printhead Resolution [e.g. 600] x Subpixel Resolution [e.g. 32]*)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*zero divisions*)
IF nResolution = 0 THEN LogError('Invalid parameter'); RETURN; END_IF;

// configration
_nResolution := nResolution;

bInitOk := TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_NeutralFibreDetermine">
      <LineId Id="4662" Count="14" />
      <LineId Id="1688" Count="0" />
    </LineIds>
    <LineIds Name="FB_NeutralFibreDetermine.Init">
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>